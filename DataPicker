package com.tiantian.test;
 
import java.util.Calendar;
 
import android.app.Activity;
import android.app.DatePickerDialog;
import android.app.DatePickerDialog.OnDateSetListener;
import android.app.Dialog;
import android.app.TimePickerDialog;
import android.app.TimePickerDialog.OnTimeSetListener;
import android.content.Intent;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.Matrix;
import android.net.Uri;
import android.os.Bundle;
import android.os.SystemClock;
import android.util.DisplayMetrics;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.Chronometer;
import android.widget.DatePicker;
import android.widget.DatePicker.OnDateChangedListener;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.TimePicker;
import android.widget.TimePicker.OnTimeChangedListener;
import android.widget.ZoomControls;
 
public class TextAndridActivity extends Activity {
/** Called when the activity is first created. */
private TextView dateText;
private TextView timeText;
private Button dateButton;
private Button timeButton;
 
private int year;
private int monthOfYear;
private int dayOfMonth;
private int hour;
private int minute;
//声明一个独一无二的标识，来作为要显示DatePicker的Dialog的ID
final static int DATE_DIALOG_ID = 1;
//声明一个独一无二的标识，来作为要显示TimePicker的Dialog的ID
final static int TIME_DIALOG_ID = 2;
@Override
public void onCreate(Bundle savedInstanceState) {
super.onCreate(savedInstanceState);
setContentView(R.layout.main);
 
dateText = (TextView) findViewById(R.id.dateText);
timeText = (TextView) findViewById(R.id.timeText);
dateButton = (Button) findViewById(R.id.dateButton);
dateButton.setOnClickListener(new OnClickListener() {
 
@Override
public void onClick(View v) {
//调用Activity类的方法来显示Dialog:调用这个方法会允许Activity管理该Dialog的生命周期， 
//并会调用 onCreateDialog(int)回调函数来请求一个Dialog
showDialog(DATE_DIALOG_ID);
}
});
timeButton = (Button) findViewById(R.id.timeButton);
timeButton.setOnClickListener(new OnClickListener() {
 
@Override
public void onClick(View v) {
//调用Activity类的方法来显示Dialog:调用这个方法会允许Activity管理该Dialog的生命周期， 
//并会调用 onCreateDialog(int)回调函数来请求一个Dialog
showDialog(TIME_DIALOG_ID);
}
});
//得到当前日期和时间(作为初始值)
Calendar calendar = Calendar.getInstance();
year = calendar.get(Calendar.YEAR);
monthOfYear = calendar.get(Calendar.MONTH);
dayOfMonth = calendar.get(Calendar.DAY_OF_MONTH);
hour = calendar.get(Calendar.HOUR_OF_DAY);
minute = calendar.get(Calendar.MINUTE);
 
}
 
//当Activity调用showDialog函数时会触发该函数的调用：
@Override
protected Dialog onCreateDialog(int id) {
// TODO Auto-generated method stub
switch(id){
case DATE_DIALOG_ID:
return new DatePickerDialog(this, new OnDateSetListener() {
 
@Override
public void onDateSet(DatePicker view, int year, int monthOfYear,
int dayOfMonth) {
// TODO Auto-generated method stub
dateText.setText(year + "年" + (monthOfYear + 1) + "月" + dayOfMonth + "日");
}
}, year, monthOfYear, dayOfMonth);
case TIME_DIALOG_ID:
return new TimePickerDialog(this, new OnTimeSetListener() {
 
@Override
public void onTimeSet(TimePicker view, int hourOfDay, int minute) {
// TODO Auto-generated method stub
timeText.setText(hourOfDay + "时" + minute + "分");
}
}, hour, minute, true);
}
return null;
} 
}
